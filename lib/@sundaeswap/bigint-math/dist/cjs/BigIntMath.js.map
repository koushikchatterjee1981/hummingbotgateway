{"version":3,"file":"BigIntMath.js","names":["max","_len","arguments","length","values","Array","_key","i","min","_len2","_key2","sign","value","abs","rootNth","k","undefined","Error","o","x","limit","Math","pow","sqrt"],"sources":["../../src/BigIntMath.ts"],"sourcesContent":["export function max(...values: bigint[]) {\n  if (values.length === 0) {\n    return null;\n  }\n\n  if (values.length === 1) {\n    return values[0];\n  }\n\n  let max = values[0];\n  for (let i = 1; i < values.length; i++) {\n    if (values[i] > max) {\n      max = values[i];\n    }\n  }\n  return max;\n}\n\nexport function min(...values: bigint[]) {\n  if (values.length === 0) {\n    return null;\n  }\n\n  if (values.length === 1) {\n    return values[0];\n  }\n\n  let min = values[0];\n  for (let i = 1; i < values.length; i++) {\n    if (values[i] < min) {\n      min = values[i];\n    }\n  }\n  return min;\n}\n\nexport function sign(value: bigint) {\n  if (value > 0n) {\n    return 1n;\n  }\n  if (value < 0n) {\n    return -1n;\n  }\n  return 0n;\n}\n\nexport function abs(value: bigint) {\n  if (sign(value) === -1n) {\n    return -value;\n  }\n  return value;\n}\n\n// https://stackoverflow.com/questions/53683995/javascript-big-integer-square-root/58863398#58863398\nexport function rootNth(value: bigint, k = 2n) {\n  if (value < 0n) {\n    throw new Error(\"negative number is not supported\");\n  }\n\n  let o = 0n;\n  let x = value;\n  let limit = 100;\n\n  while (x ** k !== k && x !== o && --limit) {\n    o = x;\n    x = ((k - 1n) * x + value / x ** (k - 1n)) / k;\n  }\n\n  return x;\n}\n\nexport function sqrt(value: bigint) {\n  return rootNth(value);\n}\n"],"mappings":"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","ignoreList":[]}